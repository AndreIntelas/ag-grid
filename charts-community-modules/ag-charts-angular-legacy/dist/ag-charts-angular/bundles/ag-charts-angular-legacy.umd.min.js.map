{"version":3,"sources":["../../../projects/ag-charts-angular/src/lib/ag-charts-angular.component.ts","../../../projects/ag-charts-angular/src/lib/ag-charts-angular.module.ts"],"names":["AgChartsAngular","elementDef","this","_initialised","options","onChartReady","EventEmitter","_nativeElement","nativeElement","prototype","ngAfterViewInit","_this","applyContainerIfNotSet","chart","AgChart","create","waitForUpdate","then","emit","ngOnChanges","changes","update","ngOnDestroy","destroy","undefined","propsOptions","container","Object","assign","Component","args","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Input","Output","NgModule","declarations","imports","exports"],"mappings":"saAuBI,SAAAA,EAAYC,GAVJC,KAAAC,cAAe,EAKhBD,KAAAE,QAA0B,GAG1BF,KAAAG,aAA8C,IAAIC,EAAAA,aAGrDJ,KAAKK,eAAiBN,EAAWO,qBAGrCR,EAAAS,UAAAC,gBAAA,WAAA,IAAAC,EAAAT,KACUE,EAAUF,KAAKU,uBAAuBV,KAAKE,SAEjDF,KAAKW,MAAQC,EAAAA,QAAQC,OAAOX,GAC5BF,KAAKC,cAAe,EAEnBD,KAAU,MAASW,MAAMG,gBACrBC,MAAI,WACDN,EAAKN,aAAaa,KAAKP,EAAKE,WAKxCb,EAAAS,UAAAU,YAAA,SAAYC,GACHlB,KAAKC,cAAiBD,KAAKW,OAIhCC,EAAAA,QAAQO,OAAOnB,KAAKW,MAAOX,KAAKU,uBAAuBV,KAAKE,WAGzDJ,EAAAS,UAAAa,YAAA,WACCpB,KAAKC,cAAgBD,KAAKW,QAC1BX,KAAKW,MAAMU,UACXrB,KAAKW,WAAQW,EACbtB,KAAKC,cAAe,IAIpBH,EAAAS,UAAAG,uBAAA,SAAuBa,GAC3B,OAAIA,EAAaC,UACND,EAGXE,OAAAC,OAAAD,OAAAC,OAAA,GAAWH,GAAY,CAAEC,UAAWxB,KAAKK,2CAxDhDsB,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,oBACVC,SAAU,GACVC,cAAeC,EAAAA,kBAAkBC,kDARHC,EAAAA,+CAiB7BC,EAAAA,4BAGAC,EAAAA,gBCTL,iCANCC,EAAAA,SAAQT,KAAA,CAAC,CACRU,aAAc,CAACxC,GACfyC,QAAS,GAETC,QAAS,CAAC1C","sourcesContent":["import {AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation} from \"@angular/core\";\n\nimport { AgChartInstance, AgChart, AgChartOptions } from 'ag-charts-community';\n\n// noinspection AngularIncorrectTemplateDefinition\n@Component({\n    selector: 'ag-charts-angular',\n    template: '',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AgChartsAngular implements AfterViewInit {\n\n    private _nativeElement: any;\n    private _initialised = false;\n \n    public chart?: AgChartInstance;\n\n    @Input()\n    public options: AgChartOptions = {};\n\n    @Output()\n    public onChartReady: EventEmitter<AgChartInstance> = new EventEmitter();\n\n    constructor(elementDef: ElementRef) {\n        this._nativeElement = elementDef.nativeElement;\n    }\n\n    ngAfterViewInit(): void {\n        const options = this.applyContainerIfNotSet(this.options);\n\n        this.chart = AgChart.create(options);\n        this._initialised = true;\n\n        (this.chart as any).chart.waitForUpdate()\n            .then(() => {\n                this.onChartReady.emit(this.chart);\n            });\n    }\n\n    // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n    ngOnChanges(changes: any): void {\n        if (!this._initialised || !this.chart) {\n            return;\n        }\n\n        AgChart.update(this.chart, this.applyContainerIfNotSet(this.options));\n    }\n\n    public ngOnDestroy(): void {\n        if (this._initialised && this.chart) {\n            this.chart.destroy();\n            this.chart = undefined;\n            this._initialised = false;\n        }\n    }\n\n    private applyContainerIfNotSet(propsOptions: AgChartOptions) {\n        if (propsOptions.container) {\n            return propsOptions;\n        }\n\n        return {...propsOptions, container: this._nativeElement};\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { AgChartsAngular } from './ag-charts-angular.component';\n\n\n\n@NgModule({\n  declarations: [AgChartsAngular],\n  imports: [\n  ],\n  exports: [AgChartsAngular]\n})\nexport class AgChartsAngularModule { }\n"]}