{"version":3,"sources":["reactUi/agGridReactUi.tsx"],"names":[],"mappings":"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","file":"agGridReactUi.mjs","sourcesContent":["import {\n    BaseComponentWrapper, ColumnApi, ComponentType,\n    ComponentUtil,\n    Context, CtrlsService, FrameworkComponentWrapper,\n    FrameworkOverridesIncomingSource,\n    GridApi,\n    GridCoreCreator,\n    GridOptions,\n    GridParams, IDetailCellRenderer, IDetailCellRendererCtrl,\n    IDetailCellRendererParams, ModuleRegistry, VanillaFrameworkOverrides, WrappableInterface, _\n} from '@ag-grid-community/core';\nimport React, {\n    forwardRef,\n    useCallback, useContext, useEffect, useImperativeHandle, useMemo,\n    useRef,\n    useState\n} from 'react';\nimport { DateComponentWrapper } from '../shared/customComp/dateComponentWrapper';\nimport { FilterComponentWrapper } from '../shared/customComp/filterComponentWrapper';\nimport { FloatingFilterComponentWrapper } from '../shared/customComp/floatingFilterComponentWrapper';\nimport { LoadingOverlayComponentWrapper } from '../shared/customComp/loadingOverlayComponentWrapper';\nimport { MenuItemComponentWrapper } from '../shared/customComp/menuItemComponentWrapper';\nimport { NoRowsOverlayComponentWrapper } from '../shared/customComp/noRowsOverlayComponentWrapper';\nimport { StatusPanelComponentWrapper } from '../shared/customComp/statusPanelComponentWrapper';\nimport { ToolPanelComponentWrapper } from '../shared/customComp/toolPanelComponentWrapper';\nimport { AgGridReactProps } from '../shared/interfaces';\nimport { ReactComponent } from '../shared/reactComponent';\nimport { PortalManager } from '../shared/portalManager';\nimport { BeansContext } from \"./beansContext\";\nimport { CssClasses, runWithoutFlushSync } from \"./utils\";\nimport GroupCellRenderer from \"../reactUi/cellRenderer/groupCellRenderer\";\nimport GridComp from './gridComp';\nimport { warnReactiveCustomComponents } from '../shared/customComp/util';\n\n\nexport const AgGridReactUi = <TData,>(props: AgGridReactProps<TData>) => {\n    const apiRef = useRef<GridApi<TData>>();\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const portalManager = useRef<PortalManager | null>(null);\n    const destroyFuncs = useRef<(() => void)[]>([]);\n    const whenReadyFuncs = useRef<(() => void)[]>([]);\n    const prevProps = useRef<AgGridReactProps<any>>(props);\n\n    const ready = useRef<boolean>(false);\n\n    const [context, setContext] = useState<Context | undefined>(undefined);\n\n    // Hook to enable Portals to be displayed via the PortalManager\n    const [, setPortalRefresher] = useState(0);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n\n            destroyFuncs.current.forEach((f) => f());\n            destroyFuncs.current.length = 0;\n\n            return;\n        }\n\n        const modules = props.modules || [];\n\n        if (!portalManager.current) {\n            portalManager.current = new PortalManager(\n                () => setPortalRefresher((prev) => prev + 1),\n                props.componentWrappingElement,\n                props.maxComponentCreationTimeMs\n            );\n            destroyFuncs.current.push(() => {\n                portalManager.current?.destroy();\n                portalManager.current = null;\n            });\n        }\n\n        const mergedGridOps = ComponentUtil.combineAttributesAndGridOptions(props.gridOptions, props);\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current, !!mergedGridOps.reactiveCustomComponents),\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(),\n        };\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n\n            destroyFuncs.current.push(() => {\n                context.destroy();\n            });\n\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n\n                if (context.isDestroyed()) {\n                    return;\n                }\n\n                const api = apiRef.current;\n                if (api) {\n                    if (props.setGridApi) {\n                        props.setGridApi(api, new ColumnApi(api));\n                    }\n                }\n            });\n        };\n\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context: Context) => {\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                whenReadyFuncs.current.forEach((f) => f());\n                whenReadyFuncs.current.length = 0;\n                ready.current = true;\n            });\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        apiRef.current = gridCoreCreator.create(\n            eGui.current,\n            mergedGridOps,\n            createUiCallback,\n            acceptChangesCallback,\n            gridParams\n        );\n\n    }, []);\n\n    const style = useMemo(() => {\n        return {\n            height: '100%',\n            ...(props.containerStyle || {}),\n        };\n    }, [props.containerStyle]);\n\n    const processWhenReady = useCallback((func: () => void) => {\n        if (ready.current) {\n            func();\n        } else {\n            whenReadyFuncs.current.push(func);\n        }\n    }, []);\n\n    useEffect(() => {\n        const changes = extractGridPropertyChanges(prevProps.current, props);\n        prevProps.current = props;\n        processWhenReady(() => {\n            if (apiRef.current) {\n                ComponentUtil.processOnChange(changes, apiRef.current)\n            }\n        });\n    }, [props]);\n\n    return (\n        <div style={style} className={props.className} ref={setRef}>\n            {context && !context.isDestroyed() ? <GridComp context={context} /> : null}\n            {portalManager.current?.getPortals() ?? null}\n        </div>\n    );\n};\n\nfunction extractGridPropertyChanges(prevProps: any, nextProps: any): { [p: string]: any } {\n    const changes: { [p: string]: any } = {};\n    Object.keys(nextProps).forEach(propKey => {\n        const propValue = nextProps[propKey];\n        if (prevProps[propKey] !== propValue) {\n            changes[propKey] = propValue;\n        }\n    });\n\n    return changes;\n}\n\nclass ReactFrameworkComponentWrapper\n    extends BaseComponentWrapper<WrappableInterface>\n    implements FrameworkComponentWrapper {\n    constructor(private readonly parent: PortalManager, private readonly reactiveCustomComponents?: boolean) {\n        super();\n    }\n\n    createWrapper(UserReactComponent: { new(): any }, componentType: ComponentType): WrappableInterface {\n        if (this.reactiveCustomComponents) {\n            const getComponentClass = (propertyName: string) => {\n                switch (propertyName) {\n                    case 'filter':\n                        return FilterComponentWrapper;\n                    case 'floatingFilterComponent':\n                        return FloatingFilterComponentWrapper;\n                    case 'dateComponent':\n                        return DateComponentWrapper;\n                    case 'loadingOverlayComponent':\n                        return LoadingOverlayComponentWrapper;\n                    case 'noRowsOverlayComponent':\n                        return NoRowsOverlayComponentWrapper;\n                    case 'statusPanel':\n                        return StatusPanelComponentWrapper;\n                    case 'toolPanel':\n                        return ToolPanelComponentWrapper;\n                    case 'menuItem':\n                        return MenuItemComponentWrapper;\n                }\n            }\n            const ComponentClass = getComponentClass(componentType.propertyName);\n            if (ComponentClass) {\n                return new ComponentClass(UserReactComponent, this.parent, componentType);\n            }\n        } else {\n            switch (componentType.propertyName) {\n                case 'filter':\n                case 'floatingFilterComponent':\n                case 'dateComponent':\n                case 'loadingOverlayComponent':\n                case 'noRowsOverlayComponent':\n                case 'statusPanel':\n                case 'toolPanel':\n                case 'menuItem':\n                    warnReactiveCustomComponents();\n                    break;\n            }\n        }\n        // only cell renderers and tool panel should use fallback methods\n        const suppressFallbackMethods = !componentType.cellRenderer && componentType.propertyName !== 'toolPanel';\n        return new ReactComponent(UserReactComponent, this.parent, componentType, suppressFallbackMethods);\n    }\n}\n\n// Define DetailCellRenderer and ReactFrameworkOverrides here to avoid circular dependency\nconst DetailCellRenderer = forwardRef((props: IDetailCellRendererParams, ref: any) => {\n\n    const { ctrlsFactory, context, gridOptionsService, resizeObserverService, clientSideRowModel, serverSideRowModel } = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [gridCssClasses, setGridCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [detailGridOptions, setDetailGridOptions] = useState<GridOptions>();\n    const [detailRowData, setDetailRowData] = useState<any[]>();\n\n    const ctrlRef = useRef<IDetailCellRendererCtrl>();\n    const eGuiRef = useRef<HTMLDivElement | null>(null);\n\n    const resizeObserverDestroyFunc = useRef<() => void>();\n\n    const parentModules = useMemo(() => ModuleRegistry.__getGridRegisteredModules(props.api.getGridId()), [props]);\n    const topClassName = useMemo(() => cssClasses.toString() + ' ag-details-row', [cssClasses]);\n    const gridClassName = useMemo(() => gridCssClasses.toString() + ' ag-details-grid', [gridCssClasses]);\n\n    if (ref) {\n        useImperativeHandle(ref, () => ({\n            refresh() { return ctrlRef.current?.refresh() ?? false; }\n        }));\n    }\n\n    if (props.template) {\n        _.warnOnce('detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://ag-grid.com/react-data-grid/master-detail-custom-detail/');\n    }\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGuiRef.current = e;\n\n        if (!eGuiRef.current) {\n            context.destroyBean(ctrlRef.current);\n            if (resizeObserverDestroyFunc.current) {\n                resizeObserverDestroyFunc.current();\n            }\n            return;\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(prev => prev.setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef.current!\n        };\n\n        const ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        ctrlRef.current = ctrl;\n\n        if (gridOptionsService.get('detailRowAutoHeight')) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef.current == null) { return; }\n\n                const clientHeight = eGuiRef.current.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n\n            resizeObserverDestroyFunc.current = resizeObserverService.observeResize(eGuiRef.current, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n    }, []);\n\n    const setGridApi = useCallback((api: GridApi, columnApi: ColumnApi) => {\n        ctrlRef.current?.registerDetailWithMaster(api, columnApi)\n    }, []);\n\n    return (\n        <div className={topClassName} ref={setRef}>\n            {\n                detailGridOptions &&\n                <AgGridReactUi className={gridClassName} {...detailGridOptions} modules={parentModules} rowData={detailRowData} setGridApi={setGridApi} />\n            }\n        </div>\n    );\n});\n\nclass ReactFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super('react');\n        this.renderingEngine = 'react';\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n\n    wrapIncoming: <T>(callback: () => T, source?: FrameworkOverridesIncomingSource) => T = (callback, source) => {\n        if (source === 'ensureVisible') {\n            // As ensureVisible could easily be called from an effect which is already running inside a React render\n            // we need to run it without flushSync to avoid the DEV error from React when calling flushSync inside a render.\n            // This does mean there will be a flicker as the grid redraws the cells in the new location but this is deemed\n            // less of an issue then the error in the console for devs. \n            return runWithoutFlushSync(callback);\n        }\n        return callback();\n    }\n}\n\n"]}