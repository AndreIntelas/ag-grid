{"version":3,"sources":["reactUi/header/headerFilterCellComp.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA4F;AAC5F,kDAA+C;AAC/C,kDAAmI;AACnI,oCAA4D;AAC5D,sCAAuC;AACvC,oDAAuD;AAEvD,MAAM,oBAAoB,GAAG,CAAC,KAAmC,EAAE,EAAE;IAEjE,MAAM,EAAC,OAAO,EAAC,GAAG,kBAAU,CAAC,2BAAY,CAAC,CAAC;IAE3C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC,CAAC;IACjH,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,EAAE,CAAC,CAAC;IACnF,MAAM,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,CAAC,2BAA2B,EAAE,WAAW,CAAC,CAAC,CAAC;IAC7I,MAAM,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,GAAG,gBAAQ,CAAmB,OAAO,CAAC,CAAC;IAClG,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,gBAAQ,EAAmB,CAAC;IAE1E,MAAM,IAAI,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAC1C,MAAM,mBAAmB,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IACzD,MAAM,cAAc,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IACpD,MAAM,qBAAqB,GAAG,cAAM,CAAoB,IAAI,CAAC,CAAC;IAE9D,MAAM,eAAe,GAAG,cAAM,CAAU,KAAK,CAAC,CAAC;IAC/C,MAAM,eAAe,GAAG,cAAM,EAAkC,CAAC;IACjE,MAAM,eAAe,GAAG,cAAM,EAA8B,CAAC;IAC7D,mCAAmB,CAAE,GAAE,EAAE;QACrB,eAAe,CAAC,OAAO,GAAG,IAAI,gBAAS,CAAmB,OAAO,CAAC,EAAE;YAChE,eAAe,CAAC,OAAO,GAAG,OAAO,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,CAAC,KAAsB,EAAE,EAAE;QAC3C,+DAA+D;QAC/D,wEAAwE;QACxE,oEAAoE;QACpE,iEAAiE;QACjE,IAAI,eAAe,CAAC,OAAO,EAAE;YAAE,OAAO;SAAE;QACxC,oCAAoC;QACpC,IAAI,KAAK,IAAE,IAAI,EAAE;YAAE,OAAO;SAAE;QAE5B,eAAe,CAAC,OAAO,IAAI,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1D,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC;IACnC,CAAC,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEvB,mCAAmB,CAAC,GAAG,EAAE;QAErB,MAAM,SAAS,GAA0B;YACrC,mBAAmB,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACjF,uBAAuB,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACzF,yBAAyB,EAAE,CAAC,SAAS,EAAE,EAAE;gBACrC,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;gBAC1E,0BAA0B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC9D,CAAC;YACD,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK;YACpD,cAAc,EAAE,WAAW,CAAC,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC;YAC9D,qBAAqB,EAAE,GAAE,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAE,IAAI;YACrF,WAAW,EAAE,KAAK,CAAC,EAAE,CAAC,qBAAqB,CAAC,OAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;SAC1E,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAQ,EAAE,qBAAqB,CAAC,OAAQ,EAAE,mBAAmB,CAAC,OAAQ,CAAC,CAAC;IAEzG,CAAC,CAAC,CAAC;IAEH,WAAW;IACX,uBAAe,CAAC,GAAG,EAAE,CAAC,mBAAU,CAAC,eAAe,EAAE,OAAO,EAAE,mBAAmB,CAAC,OAAQ,EAAE,WAAW,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAE1H,MAAM,SAAS,GAAG,eAAO,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,CAAE,CAAC;IACtE,MAAM,aAAa,GAAG,eAAO,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,CAAC,cAAc,CAAC,CAAE,CAAC;IAClF,MAAM,sBAAsB,GAAG,eAAO,CAAC,GAAG,EAAE,CAAC,uBAAuB,CAAC,QAAQ,EAAE,EAAE,CAAC,uBAAuB,CAAC,CAAE,CAAC;IAE7G,MAAM,iBAAiB,GAAG,eAAO,CAAC,GAAG,EAAE;QACnC,MAAM,GAAG,GAAG,eAAe;eACZ,eAAe,CAAC,sBAAsB;eACtC,4BAAoB,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QACpE,OAAO,CAAC,CAAC,GAAG,CAAC;IACjB,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,MAAM,aAAa,GAAG,eAAe,IAAI,eAAe,CAAC,sBAAsB,CAAC;IAChF,MAAM,aAAa,GAAG,eAAe,IAAI,eAAe,CAAC,cAAc,CAAC;IAExE,OAAO,CACH,uCAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,CAAC,CAAC;QAC9D,uCAAK,GAAG,EAAE,mBAAmB,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAC,cAAc;YACtE,aAAa,IAAI,iBAAiB,IAAI,8BAAC,aAAa,oBAAM,eAAgB,CAAC,MAAM,EAAK;YACtF,aAAa,IAAI,CAAC,iBAAiB,IAAI,8BAAC,aAAa,oBAAM,eAAgB,CAAC,MAAM,IAAG,GAAG,EAAG,WAAW,IAAI,CAC1G;QACN,uCAAK,GAAG,EAAE,cAAc,iBAAe,uBAAuB,EAAE,SAAS,EAAE,sBAAsB,EAAE,IAAI,EAAC,cAAc;YAClH,0CAAQ,GAAG,EAAE,qBAAqB,EAAE,IAAI,EAAC,QAAQ,gBAAY,kBAAkB,EAAC,SAAS,EAAC,kCAAkC,EAAC,QAAQ,EAAE,CAAC,CAAC,GAAW,CAClJ,CACJ,CACT,CAAC;AACN,CAAC,CAAC;AAEF,kBAAe,YAAI,CAAC,oBAAoB,CAAC,CAAC","file":"headerFilterCellComp.js","sourcesContent":["import React, { memo, useContext, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { CssClasses, isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\nimport { useLayoutEffectOnce } from '../useEffectOnce';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses('ag-header-cell', 'ag-floating-filter'));\n    const [cssBodyClasses, setBodyCssClasses] = useState<CssClasses>(new CssClasses());\n    const [cssButtonWrapperClasses, setButtonWrapperCssClasses] = useState<CssClasses>(new CssClasses('ag-floating-filter-button', 'ag-hidden'));\n    const [buttonWrapperAriaHidden, setButtonWrapperAriaHidden] = useState<\"true\" | \"false\">(\"false\");\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eFloatingFilterBody = useRef<HTMLDivElement>(null);\n    const eButtonWrapper = useRef<HTMLDivElement>(null);\n    const eButtonShowMainFilter = useRef<HTMLButtonElement>(null);\n\n    const alreadyResolved = useRef<boolean>(false);\n    const userCompResolve = useRef<(value: IFloatingFilter)=>void>();  \n    const userCompPromise = useRef<AgPromise<IFloatingFilter>>();\n    useLayoutEffectOnce( ()=> {\n        userCompPromise.current = new AgPromise<IFloatingFilter>( resolve => {\n            userCompResolve.current = resolve;\n        });\n    });\n    \n    const userCompRef = (value: IFloatingFilter) => {\n        // i don't know why, but react was calling this method multiple\n        // times, thus un-setting, them immediately setting the reference again.\n        // because we are resolving a promise, it's not good to be resolving\n        // the promise multiple times, so we only resolve the first time.\n        if (alreadyResolved.current) { return; }\n        // we also skip when it's un-setting\n        if (value==null) { return; }\n\n        userCompResolve.current && userCompResolve.current(value);\n        alreadyResolved.current = true;\n    };\n\n    const { ctrl } = props;\n\n    useLayoutEffectOnce(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            setButtonWrapperDisplayed: (displayed) => {\n                setButtonWrapperCssClasses(prev => prev.setClass('ag-hidden', !displayed))\n                setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setWidth: width => eGui.current!.style.width = width,\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise.current ? userCompPromise.current :  null,\n            setMenuIcon: eIcon => eButtonShowMainFilter.current!.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eButtonShowMainFilter.current!, eFloatingFilterBody.current!);\n\n    });\n\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eFloatingFilterBody.current!, userCompRef), [userCompDetails]);\n\n    const className = useMemo(() => cssClasses.toString(), [cssClasses] );\n    const bodyClassName = useMemo(() => cssBodyClasses.toString(), [cssBodyClasses] );\n    const buttonWrapperClassName = useMemo(() => cssButtonWrapperClasses.toString(), [cssButtonWrapperClasses] );\n\n    const userCompStateless = useMemo(() => {\n        const res = userCompDetails \n                    && userCompDetails.componentFromFramework \n                    && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={eGui} className={className} role=\"gridcell\" tabIndex={-1}>\n            <div ref={eFloatingFilterBody} className={bodyClassName} role=\"presentation\">\n                { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n                { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef }/> }\n            </div>\n            <div ref={eButtonWrapper} aria-hidden={buttonWrapperAriaHidden} className={buttonWrapperClassName} role=\"presentation\">\n                <button ref={eButtonShowMainFilter} type=\"button\" aria-label=\"Open Filter Menu\" className=\"ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(HeaderFilterCellComp);"]}