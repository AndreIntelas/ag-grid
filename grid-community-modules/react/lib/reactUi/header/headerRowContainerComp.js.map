{"version":3,"sources":["reactUi/header/headerRowContainerComp.tsx"],"names":[],"mappings":"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","file":"headerRowContainerComp.js","sourcesContent":["import React, { memo, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport {\n    IHeaderRowContainerComp, HeaderRowCtrl, HeaderRowContainerCtrl, ColumnPinnedType\n} from '@ag-grid-community/core';\nimport { CssClasses } from '../utils';\nimport HeaderRowComp from './headerRowComp';\nimport { useLayoutEffectOnce } from '../useEffectOnce';\n\n\nconst HeaderRowContainerComp = (props: { pinned: ColumnPinnedType }) => {\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [ariaHidden, setAriaHidden] = useState<true | false>(false);\n    const [headerRowCtrls, setHeaderRowCtrls] = useState<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    const eGui = useRef<HTMLDivElement>(null);\n    const eCenterContainer = useRef<HTMLDivElement>(null);\n\n    const pinnedLeft = props.pinned === 'left';\n    const pinnedRight = props.pinned === 'right';\n    const centre = !pinnedLeft && !pinnedRight;\n\n    useLayoutEffectOnce(() => {\n        const compProxy: IHeaderRowContainerComp = {\n            setDisplayed: displayed => {\n                setCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setAriaHidden(!displayed);\n            },\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => {\n                if (eCenterContainer.current) {\n                    eCenterContainer.current.style.width = width;\n                }\n            },\n            setViewportScrollLeft: left => {\n                if (eGui.current) {\n                    eGui.current.scrollLeft = left;\n                }\n            },\n\n            // pinned only\n            setPinnedContainerWidth: width => {\n                eGui.current!.style.width = width;\n                eGui.current!.style.minWidth = width;\n                eGui.current!.style.maxWidth = width;\n            }\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui.current!);\n\n        return () => {\n            context.destroyBean(ctrl);\n        };\n\n    });\n\n    const className = useMemo(() => cssClasses.toString(), [cssClasses]);\n\n    const insertRowsJsx = () => headerRowCtrls.map( ctrl => <HeaderRowComp ctrl={ctrl} key={ctrl.getInstanceId()} /> );\n\n    return (\n        <>\n            {\n                pinnedLeft && \n                <div ref={eGui} className={\"ag-pinned-left-header \" + className} aria-hidden={ariaHidden} role=\"presentation\">\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui} className={\"ag-pinned-right-header \" + className} aria-hidden={ariaHidden} role=\"presentation\">\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui} className={\"ag-header-viewport \" + className} role=\"presentation\">\n                        <div ref={eCenterContainer} className={\"ag-header-container\"} role=\"rowgroup\">\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default memo(HeaderRowContainerComp);\n"]}