{"version":3,"sources":["reactUi/header/gridHeaderComp.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC3E,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EACc,cAAc,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAGvD,MAAM,cAAc,GAAG,GAAG,EAAE;IAExB,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAa,IAAI,UAAU,EAAE,CAAC,CAAC;IAC3E,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,EAAU,CAAC;IAE/C,MAAM,EAAC,OAAO,EAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAE1C,mBAAmB,CAAC,GAAG,EAAE;QAErB,MAAM,SAAS,GAAoB;YAC/B,mBAAmB,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACjF,qBAAqB,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC;SACrD,CAAC;QAEF,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAQ,EAAE,IAAI,CAAC,OAAQ,CAAC,CAAC;QAEtD,OAAO,GAAG,EAAE;YACR,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC;IAEN,CAAC,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,OAAO,CAAE,GAAE,EAAE;QAC3B,IAAI,GAAG,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;QAChC,OAAO,YAAY,GAAG,GAAG,CAAC;IAC9B,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAEjB,MAAM,KAAK,GAAG,OAAO,CAAE,GAAE,EAAE,CAAC,CAAC;QACzB,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,MAAM;KACpB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEd,OAAO,CACH,6BAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC,cAAc;QACnE,oBAAC,sBAAsB,IAAC,MAAM,EAAE,MAAM,GAAI;QAC1C,oBAAC,sBAAsB,IAAC,MAAM,EAAE,IAAI,GAAG;QACvC,oBAAC,sBAAsB,IAAC,MAAM,EAAE,OAAO,GAAI,CACzC,CACT,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,cAAc,CAAC,CAAC","file":"gridHeaderComp.mjs","sourcesContent":["import React, { memo, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport {\n    IGridHeaderComp, GridHeaderCtrl,\n} from '@ag-grid-community/core';\nimport { CssClasses } from '../utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\nimport { useLayoutEffectOnce } from '../useEffectOnce';\n\n\nconst GridHeaderComp = () => {\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [height, setHeight] = useState<string>();\n\n    const {context} = useContext(BeansContext);\n    const eGui = useRef<HTMLDivElement>(null);\n\n    useLayoutEffectOnce(() => {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        const ctrl = context.createBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, eGui.current!, eGui.current!);\n\n        return () => {\n            context.destroyBean(ctrl);\n        };\n\n    });\n\n    const className = useMemo( ()=> {\n        let res = cssClasses.toString();\n        return 'ag-header ' + res;\n    }, [cssClasses]);\n\n    const style = useMemo( ()=> ({\n        height: height,\n        minHeight: height\n    }), [height]);\n\n    return (\n        <div ref={eGui} className={className} style={style} role=\"presentation\">\n            <HeaderRowContainerComp pinned={'left'} />\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={'right'} />\n        </div>\n    );\n};\n\nexport default memo(GridHeaderComp);\n"]}