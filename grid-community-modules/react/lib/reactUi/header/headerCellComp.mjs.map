{"version":3,"sources":["reactUi/header/headerCellComp.tsx"],"names":[],"mappings":"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","file":"headerCellComp.mjs","sourcesContent":["import React, { memo, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\nimport { useLayoutEffectOnce } from '../useEffectOnce';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl}) => {\n\n    const { context } = useContext(BeansContext);\n    const [title, setTitle] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [ariaSort, setAriaSort] = useState<ColumnSortState>();\n    const [ariaDescription, setAriaDescription] = useState<string>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n    const eHeaderCompWrapper = useRef<HTMLDivElement>(null);\n    const userCompRef = useRef<IHeader>();\n\n    const { ctrl } = props;\n\n    const cssClassManager = useMemo(() => new CssClassManager(() => eGui.current!), []);\n\n    useLayoutEffectOnce(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n\n            setAriaDescription: description => setAriaDescription(description),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userCompRef.current || undefined\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eResize.current!, eHeaderCompWrapper.current!);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.current?.insertAdjacentElement('afterend', selectAllGui);\n    });\n\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eHeaderCompWrapper.current!, userCompRef), [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(() => {\n        ctrl.setDragSource(eGui.current!);\n    }, [userCompDetails]);\n\n    const userCompStateless = useMemo(() => {\n        const res = userCompDetails?.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div\n            ref={eGui}\n            className=\"ag-header-cell\"\n            title={ title }\n            col-id={ colId }\n            aria-sort={ ariaSort }\n            role=\"columnheader\"\n            tabIndex={-1}\n            aria-description={ ariaDescription }\n        >\n            <div ref={eResize} className=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper} className=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n            { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef }/> }\n            </div>\n        </div>\n    );\n};\n\nexport default memo(HeaderCellComp);\n"]}