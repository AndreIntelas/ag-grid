{"version":3,"sources":["reactUi/agGridReactUi.tsx"],"names":[],"mappings":"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","file":"agGridReactUi.js","sourcesContent":["import { BaseComponentWrapper, CtrlsService, ColumnApi, ComponentType, ComponentUtil, Context, FrameworkComponentWrapper, GridApi, GridCoreCreator, GridOptions, GridParams, WrappableInterface, _ } from '@ag-grid-community/core';\nimport React, { Component } from 'react';\nimport { AgReactUiProps } from '../shared/interfaces';\nimport { NewReactComponent } from '../shared/newReactComponent';\nimport { PortalManager } from '../shared/portalManager';\nimport GridComp from './gridComp';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides';\n\nfunction debug(msg: string, obj?: any) {\n    // console.log(msg, obj);\n}\n\nexport class AgGridReactUi<TData = any> extends Component<AgReactUiProps<TData>, { context: Context | undefined }> {\n\n    public api!: GridApi<TData>;\n    public columnApi!: ColumnApi;\n\n    private gridOptions!: GridOptions<TData>;\n\n    private destroyFuncs: (() => void)[] = [];\n    private eGui = React.createRef<HTMLDivElement>();\n\n    private portalManager: PortalManager;\n\n    private whenReadyFuncs: (()=>void)[] = [];\n    private ready = false;\n\n    private renderedAfterMount = false;\n    private mounted = false;\n\n    // Would like props to be of type AgReactUiProps<TData> but currently breaks build\n    constructor(public props: any) {\n        super(props);\n        debug('AgGridReactUi.constructor');\n        this.state = {context: undefined};\n        this.portalManager = new PortalManager(this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n        this.destroyFuncs.push(() => this.portalManager.destroy());\n    }\n\n    public render() {\n        debug('AgGridReactUi.render, context = ' + (this.state.context));\n        if (this.state.context) {\n            this.renderedAfterMount = true;\n        }\n\n        return (\n            <div style={ this.createStyleForDiv() } className={ this.props.className } ref={ this.eGui }>\n                { this.state.context && <GridComp context={ this.state.context }/> }\n                { this.portalManager.getPortals() }\n            </div>\n        );\n    }\n\n    private createStyleForDiv() {\n        return {\n            height: '100%',\n            ...(this.props.containerStyle || {})\n        };\n    }\n\n    public componentDidMount() {\n\n        if (this.mounted) {\n            debug('AgGridReactUi.componentDidMount - skipping');\n            return;\n        }\n        debug('AgGridReactUi.componentDidMount');\n        this.mounted = true;\n\n        const modules = this.props.modules || [];\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this.portalManager)\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(true)\n        };\n\n        this.gridOptions = this.props.gridOptions || {};\n        this.gridOptions = ComponentUtil.copyAttributesToGridOptions(this.gridOptions, this.props);\n\n        this.checkForDeprecations(this.props);\n\n        const createUiCallback = (context: Context) => {\n            this.setState({context: context});\n\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady( ()=> {\n                debug('AgGridReactUi.createUiCallback');\n\n                this.api = this.gridOptions.api!;\n                this.columnApi = this.gridOptions.columnApi!;\n                this.props.setGridApi!(this.api, this.columnApi);\n                this.destroyFuncs.push(() => this.api.destroy());\n            });\n        };\n\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context: Context)=> {\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady( ()=> {\n                debug('AgGridReactUi.acceptChangesCallback');\n                this.whenReadyFuncs.forEach( f => f() );\n                this.whenReadyFuncs.length = 0;\n                this.ready = true;\n            });\n        }\n\n        // don't need the return value\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(this.eGui.current!, this.gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    }\n\n    private checkForDeprecations(props: any) {\n        if (props.rowDataChangeDetectionStrategy) {\n            _.doOnce(() => console.warn('AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'), 'rowDataChangeDetectionStrategy_Deprecation')\n        }\n    }\n\n    public componentWillUnmount() {\n        if (this.renderedAfterMount) {\n            debug('AgGridReactUi.componentWillUnmount - executing');\n            this.destroyFuncs.forEach(f => f());\n            this.destroyFuncs.length = 0;\n        } else {\n            debug('AgGridReactUi.componentWillUnmount - skipping');\n        }\n    }\n\n    public componentDidUpdate(prevProps: any) {\n        this.processPropsChanges(prevProps, this.props);\n    }\n\n    public processPropsChanges(prevProps: any, nextProps: any) {\n        const changes = {};\n\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n\n        this.processChanges(changes);\n    }\n\n    private extractGridPropertyChanges(prevProps: any, nextProps: any, changes: any) {\n        const debugLogging = !!nextProps.debug;\n\n        Object.keys(nextProps).forEach(propKey => {\n            if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey as any)) {\n                if (prevProps[propKey] !== nextProps[propKey]) {\n                    if (debugLogging) {\n                        console.log(`agGridReact: [${propKey}] property changed`);\n                    }\n\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n\n        ComponentUtil.EVENT_CALLBACKS.forEach(funcName => {\n            if (prevProps[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(`agGridReact: [${funcName}] event callback changed`);\n                }\n\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    }\n\n    private processChanges(changes: {}) {\n        this.processWhenReady( ()=>\n            ComponentUtil.processOnChange(changes, this.api)\n        );\n    }\n\n    private processWhenReady(func: ()=>void): void {\n        if (this.ready) {\n            debug('AgGridReactUi.processWhenReady sync');\n            func();\n        } else {\n            debug('AgGridReactUi.processWhenReady async');\n            this.whenReadyFuncs.push(func);\n        }\n    }\n}\n\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private readonly parent: PortalManager;    \n\n    constructor(parent: PortalManager) {\n        super();\n        this.parent = parent;\n    }\n\n    createWrapper(UserReactComponent: { new(): any; }, componentType: ComponentType): WrappableInterface {\n        return new NewReactComponent(UserReactComponent, this.parent, componentType);\n    }\n}\n"]}