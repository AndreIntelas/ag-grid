{"version":3,"sources":["reactUi/cellRenderer/groupCellRenderer.tsx"],"names":[],"mappings":"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","file":"groupCellRenderer.js","sourcesContent":["import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"@ag-grid-community/core\";\nimport React, { useContext, useImperativeHandle, forwardRef, useMemo, useRef, useState, useLayoutEffect } from 'react';\nimport { BeansContext } from \"../beansContext\";\nimport { showJsComp } from \"../jsComp\";\nimport { useLayoutEffectOnce } from \"../useEffectOnce\";\nimport { CssClasses } from \"../utils\";\n\nconst GroupCellRenderer = forwardRef((props: GroupCellRendererParams, ref) => {\n\n    const context = useContext(BeansContext).context!;\n\n    const eGui = useRef<HTMLElement>(null);\n    const eValueRef = useRef<HTMLElement>(null);\n    const eCheckboxRef = useRef<HTMLElement>(null);\n    const eExpandedRef = useRef<HTMLElement>(null);\n    const eContractedRef = useRef<HTMLElement>(null);\n\n    const [innerCompDetails, setInnerCompDetails] = useState<UserCompDetails>();\n    const [childCount, setChildCount] = useState<string>();\n    const [value, setValue] = useState<any>();\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [expandedCssClasses, setExpandedCssClasses] = useState<CssClasses>(new CssClasses('ag-hidden'));\n    const [contractedCssClasses, setContractedCssClasses] = useState<CssClasses>(new CssClasses('ag-hidden'));\n    const [checkboxCssClasses, setCheckboxCssClasses] = useState<CssClasses>(new CssClasses('ag-invisible'));\n\n    useImperativeHandle(ref, () => {\n        return {\n            // force new instance when grid tries to refresh\n            refresh() { return false; }\n        };\n    });\n\n    useLayoutEffect(() => {\n        return showJsComp(innerCompDetails, context, eValueRef.current!);\n    }, [innerCompDetails]);\n\n    useLayoutEffectOnce(() => {\n\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                setValue(valueToDisplay);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(prev => prev.setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(prev => prev.setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(prev => prev.setClass('ag-invisible', !visible))\n        };\n\n        const ctrl = context.createBean(new GroupCellRendererCtrl());\n        ctrl.init(compProxy, eGui.current!, eCheckboxRef.current!, eExpandedRef.current!, eContractedRef.current!, GroupCellRenderer, props);\n\n        return () => { context.destroyBean(ctrl);};\n    });\n\n    const className = useMemo(() => `ag-cell-wrapper ${cssClasses.toString()}`, [cssClasses]);\n    const expandedClassName = useMemo(() => `ag-group-expanded ${expandedCssClasses.toString()}`, [expandedCssClasses]);\n    const contractedClassName = useMemo(() => `ag-group-contracted ${contractedCssClasses.toString()}`, [contractedCssClasses]);\n    const checkboxClassName = useMemo(() => `ag-group-checkbox ${checkboxCssClasses.toString()}`, [checkboxCssClasses]);\n\n    const useFwRenderer = innerCompDetails && innerCompDetails.componentFromFramework;\n    const FwRenderer = useFwRenderer ? innerCompDetails!.componentClass : undefined;\n    const useValue = innerCompDetails == null && value != null;\n    const escapedValue = _.escapeString(value, true);\n\n    return (\n        <span className={className} ref={eGui} {...(!props.colDef ? { role: 'gridcell' } : {})}>\n            <span className={expandedClassName} ref={eExpandedRef}></span>\n            <span className={contractedClassName} ref={eContractedRef}></span>\n            <span className={checkboxClassName} ref={eCheckboxRef}></span>\n            <span className=\"ag-group-value\" ref={eValueRef}>\n                { useValue && <>{escapedValue}</> }\n                { useFwRenderer && <FwRenderer {...innerCompDetails!.params}/> }\n            </span>\n            <span className=\"ag-group-child-count\">{childCount}</span>\n        </span>\n        );\n});\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;"]}