{"version":3,"sources":["reactUi/utils.tsx"],"names":[],"mappings":";;;;;;;AAAA,0DAAiC;AAE1B,MAAM,WAAW,GAAG,CAAC,GAAG,IAAmC,EAAU,EAAE;IAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAE1D,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC,CAAA;AAJY,QAAA,WAAW,eAIvB;AAED,MAAa,UAAU;IAInB,YAAY,GAAG,cAAwB;QAF/B,eAAU,GAA8B,EAAE,CAAC;QAG/C,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,QAAQ,CAAC,SAAiB,EAAE,EAAW;QAC1C,gEAAgE;QAChE,sDAAsD;QACtD,MAAM,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAC7D,IAAI,iBAAiB,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAEvC,MAAM,GAAG,GAAG,IAAI,UAAU,EAAE,CAAC;QAC7B,GAAG,CAAC,UAAU,qBAAO,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAC/B,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,QAAQ;QACX,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvF,OAAO,GAAG,CAAC;IACf,CAAC;CAEJ;AA3BD,gCA2BC;AAEM,MAAM,oBAAoB,GAAG,CAAC,SAAc,EAAE,EAAE;IACnD,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,CAAC;IACnE,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAE1E,OAAO,CACC,OAAO,SAAS,KAAK,UAAU,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,CACpG,IAAI,CAAC,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,CAAC,QAAQ,KAAK,WAAW,EAAE,CAAC,CAAC;AACrF,CAAC,CAAA;AAPY,QAAA,oBAAoB,wBAOhC;AAED,0FAA0F;AAC1F,MAAM,+BAA+B,GAAI,mBAAgB,CAAC,UAAU,IAAI,IAAI,IAAK,mBAAgB,CAAC,SAAS,IAAI,IAAI,CAAC;AAEpH;;;;GAIG;AACI,MAAM,WAAW,GAAG,CAAC,YAAqB,EAAE,EAAc,EAAE,EAAE;IACjE,IAAI,+BAA+B,IAAI,YAAY,EAAE;QAChD,mBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KACnC;SAAM;QACH,EAAE,EAAE,CAAC;KACR;AACL,CAAC,CAAA;AANY,QAAA,WAAW,eAMvB","file":"utils.js","sourcesContent":["import ReactDOM from \"react-dom\";\n\nexport const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\n// CreateRoot is only available from React 18, which if used requires us to use flushSync.\nconst createRootAndFlushSyncAvailable = (ReactDOM as any).createRoot != null && (ReactDOM as any).flushSync != null;\n\n/**\n * Wrapper around flushSync to provide backwards compatibility with React 16-17\n * Also allows us to control via the `useFlushSync` param whether we want to use flushSync or not\n * as we do not want to use flushSync when we are likely to already be in a render cycle\n */\nexport const agFlushSync = (useFlushSync: boolean, fn: () => void) => {\n    if (createRootAndFlushSyncAvailable && useFlushSync) {\n        (ReactDOM as any).flushSync(fn);\n    } else {\n        fn();\n    }\n}"]}