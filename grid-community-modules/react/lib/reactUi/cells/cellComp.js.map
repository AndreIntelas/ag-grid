{"version":3,"sources":["reactUi/cells/cellComp.tsx"],"names":[],"mappings":"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","file":"cellComp.js","sourcesContent":["import { CellCtrl, Component, ICellComp, ICellEditor, ICellRendererComp, UserCompDetails, _, ICellEditorComp, CssClassManager, CellStyle } from '@ag-grid-community/core';\nimport React, { MutableRefObject, useCallback, useEffect, useRef, useState, useMemo, memo, useContext, useLayoutEffect } from 'react';\nimport { isComponentStateless } from '../utils';\nimport PopupEditorComp from './popupEditorComp';\nimport useJsCellRenderer from './showJsRenderer';\nimport { BeansContext } from '../beansContext';\nimport { createSyncJsComp } from '../jsComp';\nimport { useLayoutEffectOnce } from '../useEffectOnce';\n\nexport enum CellCompState { ShowValue, EditValue }\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using React, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid React cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as React needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using React, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid React cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as React needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst jsxEditValue = (\n        editDetails: EditDetails, \n        setInlineCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        setPopupCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        eGui: HTMLElement, \n        cellCtrl: CellCtrl,\n        jsEditorComp: ICellEditorComp | undefined ) => {\n\n    const compDetails = editDetails.compDetails;\n    const CellEditorClass = compDetails.componentClass;\n\n    const reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n    const reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n    const jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n\n    return (\n        <>\n            { \n                reactInlineEditor && <CellEditorClass { ...editDetails.compDetails.params } ref={ setInlineCellEditorRef }/> \n            }\n\n            { \n                reactPopupEditor &&\n                <PopupEditorComp\n                    editDetails={ editDetails }\n                    cellCtrl={cellCtrl}\n                    eParentCell={eGui}\n                    wrappedContent={\n                        <CellEditorClass { ...editDetails.compDetails.params } ref={ setPopupCellEditorRef }/>\n                    }\n                />\n            }\n\n            { \n                jsPopupEditor &&\n                jsEditorComp &&\n                <PopupEditorComp\n                    editDetails={editDetails}\n                    cellCtrl={cellCtrl}\n                    eParentCell={eGui}\n                    jsChildComp={ jsEditorComp } \n                /> \n            }\n        </>\n    )\n}\n\nconst jsxShowValue = (\n    showDetails: RenderDetails,\n    key: number,\n    parentId: string,\n    cellRendererRef: MutableRefObject<any>,\n    showCellWrapper: boolean,\n    reactCellRendererStateless: boolean,\n    setECellValue: (ref:any) => void\n) => {\n    const { compDetails, value } = showDetails;\n\n    const noCellRenderer = !compDetails;\n    const reactCellRenderer = compDetails && compDetails.componentFromFramework;\n\n    const CellRendererClass = compDetails && compDetails.componentClass;\n\n    // if we didn't do this, objects would cause React error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = (value?.toString) ? value.toString() : value;\n\n    const bodyJsxFunc = () => (\n        <>\n            { noCellRenderer && <>{ valueForNoCellRenderer }</> }\n            { reactCellRenderer && !reactCellRendererStateless && <CellRendererClass { ...compDetails!.params } key={key} ref={ cellRendererRef }/> }\n            { reactCellRenderer && reactCellRendererStateless && <CellRendererClass { ...compDetails!.params } key={key}/> }\n        </>\n    );\n\n    return (\n        <>\n            {\n                showCellWrapper\n                ? (\n                    <span role=\"presentation\" id={`cell-${parentId}`} className=\"ag-cell-value\" ref={ setECellValue }>\n                        { bodyJsxFunc() }\n                    </span>\n                )\n                : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport interface RenderDetails {\n    compDetails: UserCompDetails | undefined;\n    value?: any;\n    force?: boolean;\n}\nexport interface EditDetails {\n    compDetails: UserCompDetails;\n    popup?: boolean;\n    popupPosition?: 'over' | 'under';\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { context } = useContext(BeansContext);\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = useState<RenderDetails>();\n    const [editDetails, setEditDetails ] = useState<EditDetails>();\n    const [renderKey, setRenderKey] = useState<number>(1);\n\n    const [userStyles, setUserStyles] = useState<CellStyle>();\n\n    const [tabIndex, setTabIndex] = useState<number>();\n    const [role, setRole] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [title, setTitle] = useState<string | undefined>();\n    const [includeSelection, setIncludeSelection] = useState<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = useState<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = useState<boolean>(false);\n\n    const [jsEditorComp, setJsEditorComp] = useState<ICellEditorComp>();\n\n    const forceWrapper = useMemo(() => cellCtrl.isForceWrapper(), []);\n    const eGui = useRef<HTMLDivElement>(null);\n    const cellRendererRef = useRef<any>(null);\n    const jsCellRendererRef = useRef<ICellRendererComp>();\n    const cellEditorRef = useRef<ICellEditor>();\n\n    // when setting the ref, we also update the state item to force a re-render\n    const eCellWrapper = useRef<HTMLDivElement>();\n    const [cellWrapperVersion, setCellWrapperVersion] = useState(0);\n    const setCellWrapperRef = useCallback((ref: HTMLDivElement) => {\n        eCellWrapper.current = ref;\n        setCellWrapperVersion( v => v+1 );\n    }, []);\n\n    // when setting the ref, we also update the state item to force a re-render\n    const eCellValue = useRef<HTMLDivElement>();\n    const [cellValueVersion, setCellValueVersion] = useState(0);\n    const setCellValueRef = useCallback( (ref: HTMLDivElement) => {\n        eCellValue.current = ref;\n        setCellValueVersion( v => v+1 );\n    }, []);\n    \n    const showTools = renderDetails != null && (includeSelection || includeDndSource || includeRowDrag);\n    const showCellWrapper = forceWrapper || showTools;\n\n    const setCellEditorRef = useCallback((popup: boolean, cellEditor: ICellEditor | undefined) => {\n        cellEditorRef.current = cellEditor;\n        if (cellEditor) {\n            checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n            const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n            if (editingCancelledByUserComp) {\n                // we cannot set state inside render, so hack is to do it in next VM turn\n                setTimeout(() => {\n                    cellCtrl.stopEditing(true);\n                    cellCtrl.focusCell(true);\n                });\n            }\n        }\n    }, []);\n\n    const setPopupCellEditorRef = useCallback(\n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(true, cellRenderer),\n        []\n    );\n\n    const setInlineCellEditorRef = useCallback(\n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(false, cellRenderer), \n        []\n    );\n\n    const cssClassManager = useMemo(() => new CssClassManager(() => eGui.current!), []);\n\n    useJsCellRenderer(renderDetails, showCellWrapper, eCellValue.current, cellValueVersion, jsCellRendererRef, eGui);\n\n    // if RenderDetails changed, need to call refresh. This is not our preferred way (the preferred\n    // way for React is just allow the new props to propagate down to the React Cell Renderer)\n    // however we do this for backwards compatibility, as having refresh used to be supported.\n    const lastRenderDetails = useRef<RenderDetails>();\n    useLayoutEffect(() => {\n        const oldDetails = lastRenderDetails.current;\n        const newDetails = renderDetails;\n        lastRenderDetails.current = renderDetails;\n\n        // if not updating renderDetails, do nothing\n        if (\n            oldDetails == null ||\n            oldDetails.compDetails == null ||\n            newDetails == null ||\n            newDetails.compDetails==null\n        ) { return; }\n\n        const oldCompDetails = oldDetails.compDetails;\n        const newCompDetails = newDetails.compDetails;\n\n        // if different Cell Renderer, then do nothing, as renderer will be recreated\n        if (oldCompDetails.componentClass != newCompDetails.componentClass) { return; }\n\n        // if no refresh method, do nothing\n        if (cellRendererRef.current == null || cellRendererRef.current.refresh == null) {  return; }\n\n        const result = cellRendererRef.current.refresh(newCompDetails.params);\n        if (result != true) {\n            // increasing the render key forces the refresh. this is undocumented (for React users,\n            // we don't document the refresh method, instead we tell them to act on new params).\n            // however the GroupCellRenderer has this logic in it and would need a small refactor\n            // to get it working without using refresh() returning false. so this hack staying in,\n            // in React if refresh() is implemented and returns false (or undefined), we force a refresh\n            setRenderKey( prev => prev + 1 );\n        }\n\n    }, [renderDetails]);\n\n    useLayoutEffect(() => {\n        const doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n        if (!doingJsEditor) { return; }\n\n        const compDetails = editDetails!.compDetails;\n        const isPopup = editDetails!.popup === true;\n    \n        const cellEditor = createSyncJsComp(compDetails) as ICellEditorComp;\n        if (!cellEditor) { return; }\n\n        const compGui = cellEditor.getGui();\n\n        setCellEditorRef(isPopup, cellEditor);\n\n        if (!isPopup) {\n            const parentEl = (forceWrapper ? eCellWrapper : eGui).current;\n            parentEl?.appendChild(compGui);\n\n            cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n        }\n\n        setJsEditorComp(cellEditor);\n\n        return () => {\n            context.destroyBean(cellEditor);\n            setCellEditorRef(isPopup, undefined);\n            setJsEditorComp(undefined);\n\n            if (compGui && compGui.parentElement) {\n                compGui.parentElement.removeChild(compGui);\n            }\n        };\n    }, [editDetails]);\n\n    // tool widgets effect\n    useLayoutEffect(() => {\n        if (!cellCtrl || !context) { return; }\n\n        if (!eCellWrapper.current || !showCellWrapper) { return; }\n\n        const destroyFuncs: (() => void)[] = [];\n\n        const addComp = (comp: Component | undefined) => {\n            if (comp) {\n                const eGui = comp.getGui();\n                eCellWrapper.current?.insertAdjacentElement('afterbegin', eGui);\n                destroyFuncs.push(() => {\n                    context.destroyBean(comp);\n                    _.removeFromParent(eGui);\n                });\n            }\n            return comp;\n        }\n\n        if (includeSelection) {\n            const checkboxSelectionComp = cellCtrl.createSelectionCheckbox();\n            addComp(checkboxSelectionComp);\n        }\n\n        if (includeDndSource) {\n            addComp(cellCtrl.createDndSource());\n        }\n\n        if (includeRowDrag) {\n            addComp(cellCtrl.createRowDragComp());\n        }\n\n        return () => destroyFuncs.forEach(f => f());\n\n    }, [showCellWrapper, includeDndSource, includeRowDrag, includeSelection, cellWrapperVersion]);\n\n    // we use layout effect here as we want to synchronously process setComp and it's side effects\n    // to ensure the component is fully initialised prior to the first browser paint. See AG-7018.\n    useLayoutEffectOnce(() => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setUserStyles: (styles: CellStyle) => setUserStyles(styles),\n            getFocusableElement: () => eGui.current!,\n            setTabIndex: tabIndex => setTabIndex(tabIndex),\n            setRole: role => setRole(role),\n            setColId: colId => setColId(colId),\n            setTitle: title => setTitle(title),\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditorRef.current || null,\n            getCellRenderer: () => cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current,\n            getParentOfValue: () => eCellValue.current ? eCellValue.current : eCellWrapper.current ? eCellWrapper.current : eGui.current,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        const cellWrapperOrUndefined = eCellWrapper.current || undefined;\n\n        cellCtrl.setComp(compProxy, eGui.current!, cellWrapperOrUndefined, printLayout, editingRow);\n    });\n\n    const reactCellRendererStateless = useMemo(() => {\n        const res =\n            renderDetails &&\n            renderDetails.compDetails &&\n            renderDetails.compDetails.componentFromFramework &&\n            isComponentStateless(renderDetails.compDetails.componentClass);\n\n        return !!res;\n    }, [renderDetails]);\n\n    useEffect(() => {\n        if (!eGui.current) { return; }\n        cssClassManager.addOrRemoveCssClass('ag-cell-value', !showCellWrapper);\n        cssClassManager.addOrRemoveCssClass('ag-cell-inline-editing', !!editDetails && !editDetails.popup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-popup-editing', !!editDetails && !!editDetails.popup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-not-inline-editing', !editDetails || !!editDetails.popup);\n        cellCtrl.getRowCtrl()?.setInlineEditingCss(!!editDetails);\n    });\n\n    const cellInstanceId = useMemo(() => cellCtrl.getInstanceId(), []);\n\n    const showContents = () => (\n        <>\n            {\n                (renderDetails != null && jsxShowValue(\n                    renderDetails,\n                    renderKey,\n                    cellInstanceId,\n                    cellRendererRef,\n                    showCellWrapper,\n                    reactCellRendererStateless,\n                    setCellValueRef\n                ))\n            }\n            {\n                (editDetails != null && jsxEditValue(\n                    editDetails,\n                    setInlineCellEditorRef,\n                    setPopupCellEditorRef,\n                    eGui.current!,\n                    cellCtrl,\n                    jsEditorComp\n                ))\n            }\n        </>\n    );\n\n    return (\n        <div\n            ref={ eGui }\n            style={ userStyles }\n            tabIndex={ tabIndex }\n            role={ role }\n            col-id={ colId }\n            title={ title }\n        >\n            { showCellWrapper\n                ? (\n                    <div className=\"ag-cell-wrapper\" role=\"presentation\" ref={ setCellWrapperRef }>\n                        { showContents() }\n                    </div>\n                )\n                : showContents()\n            }\n        </div>\n    );\n}\n\nexport default memo(CellComp);\n"]}