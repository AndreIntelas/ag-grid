{"version":3,"sources":["shared/customComp/floatingFilterComponentWrapper.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,0BAA0B,EAAE,MAAM,gCAAgC,CAAC;AAG5E,kHAAkH;AAClH,MAAM,OAAO,8BAA+B,SAAQ,sBAAuG;IAA3J;;QACY,UAAK,GAAQ,IAAI,CAAC;QACT,kBAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IA6B7E,CAAC;IA3BU,oBAAoB,CAAC,WAAgB;QACxC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO,CAAC,SAAgC;QAC3C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,kBAAkB;QACxB,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAChC,CAAC;IAEO,WAAW,CAAC,KAAU;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,uFAAuF;QACvF,0BAA0B,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IAES,QAAQ;QACd,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ","file":"floatingFilterComponentWrapper.mjs","sourcesContent":["import { IFloatingFilter, IFloatingFilterParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { updateFloatingFilterParent } from \"./floatingFilterComponentProxy\";\nimport { CustomFloatingFilterProps, CustomFloatingFilterCallbacks } from \"./interfaces\";\n\n// floating filter is normally instantiated via react header filter cell comp, but not in the case of multi filter\nexport class FloatingFilterComponentWrapper extends CustomComponentWrapper<IFloatingFilterParams, CustomFloatingFilterProps, CustomFloatingFilterCallbacks> implements IFloatingFilter {\n    private model: any = null;\n    private readonly onModelChange = (model: any) => this.updateModel(model);\n\n    public onParentModelChanged(parentModel: any): void {\n        this.model = parentModel;\n        this.refreshProps();\n    }\n\n    public refresh(newParams: IFloatingFilterParams): void {\n        this.sourceParams = newParams;\n        this.refreshProps();\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['afterGuiAttached'];\n    }\n\n    private updateModel(model: any): void {\n        this.model = model;\n        this.refreshProps();\n        // don't need to wait on `refreshProps` as not reliant on state maintained inside React\n        updateFloatingFilterParent(this.sourceParams, model);\n    }\n\n    protected getProps(): CustomFloatingFilterProps {\n        const props = super.getProps();\n        props.model = this.model;\n        props.onModelChange = this.onModelChange;\n        return props;\n    }\n}\n"]}