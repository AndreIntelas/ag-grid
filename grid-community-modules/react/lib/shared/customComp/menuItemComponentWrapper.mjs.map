{"version":3,"sources":["shared/customComp/menuItemComponentWrapper.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAGlE,MAAM,OAAO,wBAAyB,SAAQ,sBAAqF;IAAnI;;QACY,WAAM,GAAY,KAAK,CAAC;QACxB,aAAQ,GAAY,KAAK,CAAC;QACjB,mBAAc,GAAG,CAAC,MAAe,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAoCrF,CAAC;IAlCU,SAAS,CAAC,MAAe;QAC5B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAEM,WAAW,CAAC,QAAiB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,kBAAkB;QACxB,OAAO,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IAC3C,CAAC;IAEO,cAAc,CAAC,MAAe;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC/B,CAAC;IAEO,YAAY,CAAC,MAAe;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,MAAM,EAAC;YACP,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC;SAC1D;IACL,CAAC;IAES,QAAQ;QACd,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,8DAA8D;QAC9D,OAAQ,KAAa,CAAC,eAAe,CAAC;QACtC,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ","file":"menuItemComponentWrapper.mjs","sourcesContent":["import { AgPromise, IMenuItem, IMenuItemParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomMenuItemProps, CustomMenuItemCallbacks } from \"./interfaces\";\n\nexport class MenuItemComponentWrapper extends CustomComponentWrapper<IMenuItemParams, CustomMenuItemProps, CustomMenuItemCallbacks> implements IMenuItem {\n    private active: boolean = false;\n    private expanded: boolean = false;\n    private readonly onActiveChange = (active: boolean) => this.updateActive(active);\n\n    public setActive(active: boolean): void {\n        this.awaitSetActive(active);\n    }\n\n    public setExpanded(expanded: boolean): void {\n        this.expanded = expanded;\n        this.refreshProps();\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['select', 'configureDefaults'];\n    }\n\n    private awaitSetActive(active: boolean): AgPromise<void> {\n        this.active = active;\n        return this.refreshProps();\n    }\n\n    private updateActive(active: boolean): void {\n        const result = this.awaitSetActive(active);\n        if (active){\n            result.then(() => this.sourceParams.onItemActivated());\n        }\n    }\n\n    protected getProps(): CustomMenuItemProps {\n        const props = super.getProps();\n        props.active = this.active;\n        props.expanded = this.expanded;\n        props.onActiveChange = this.onActiveChange;\n        // remove props in IMenuItemParams but not CustomMenuItemProps\n        delete (props as any).onItemActivated;\n        return props;\n    }\n}\n"]}