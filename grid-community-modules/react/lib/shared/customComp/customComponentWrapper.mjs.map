{"version":3,"sources":["shared/customComp/customComponentWrapper.ts"],"names":[],"mappings":"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","file":"customComponentWrapper.mjs","sourcesContent":["import { AgPromise } from \"@ag-grid-community/core\";\nimport customWrapperComp from \"../../reactUi/customComp/customWrapperComp\";\nimport { ReactComponent } from \"../reactComponent\";\n\nexport type WrapperParams<P, M> = {\n    initialProps: P;\n    CustomComponentClass: any;\n    setMethods: (methods: M) => void;\n    addUpdateCallback: (callback: (props: P) => void) => void;\n}\n\nexport function addOptionalMethods<M, C>(optionalMethodNames: string[], providedMethods: M, component: C): void {\n    optionalMethodNames.forEach(methodName => {\n        const providedMethod = (providedMethods as any)[methodName];\n        if (providedMethod) {\n            (component as any)[methodName] = providedMethod;\n        }\n    });\n}\n\nexport class CustomComponentWrapper<TInputParams, TOutputParams, TMethods> extends ReactComponent {\n    private updateCallback?: () => AgPromise<void>;\n    private resolveUpdateCallback!: () => void;\n    private awaitUpdateCallback = new AgPromise<void>(resolve => {\n        this.resolveUpdateCallback = resolve;\n    });\n\n    protected providedMethods!: TMethods;\n\n    protected wrapperComponent: any = customWrapperComp;\n\n    protected sourceParams!: TInputParams;\n\n    public init(params: TInputParams): AgPromise<void> {\n        this.sourceParams = params;\n        return super.init(this.getProps());\n    }\n\n    public addMethod(): void {\n        // do nothing\n    }\n\n    public getInstance(): AgPromise<any> {\n        return this.instanceCreated.then(() => this.componentInstance);\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this;\n    }\n\n    protected createElement(reactComponent: any, props: TOutputParams): any {\n        return super.createElement(this.wrapperComponent, {\n            initialProps: props,\n            CustomComponentClass: reactComponent,\n            setMethods: (methods: TMethods) => this.setMethods(methods),\n            addUpdateCallback: (callback: (props: TOutputParams) => void) => {\n                // this hooks up `CustomWrapperComp` to allow props updates to be pushed to the custom component\n                this.updateCallback = () => {\n                    callback(this.getProps());\n                    return new AgPromise<void>(resolve => {\n                        // ensure prop updates have happened\n                        setTimeout(() => {\n                            resolve();\n                        });\n                    });\n                };\n                this.resolveUpdateCallback();\n            }\n        });\n    }\n\n    protected setMethods(methods: TMethods): void {\n        this.providedMethods = methods;\n        addOptionalMethods(this.getOptionalMethods(), this.providedMethods, this);\n    }\n\n    protected getOptionalMethods(): string[] {\n        return [];\n    }\n\n    protected getProps(): TOutputParams {\n        return {\n            ...this.sourceParams,\n            key: this.key,\n            ref: this.ref\n         } as any;\n    }\n\n    protected refreshProps(): AgPromise<void> {\n        if (this.updateCallback) {\n            return this.updateCallback();\n        }\n        // `refreshProps` is assigned in an effect. It's possible it hasn't been run before the first usage, so wait.\n        return new AgPromise<void>(resolve => this.awaitUpdateCallback.then(() => {\n            this.updateCallback!().then(() => resolve());\n        }));\n    }\n}\n"]}