{"version":3,"sources":["shared/customComp/util.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAkD,CAAC,EAAE,MAAM,yBAAyB,CAAC;AAEvG;;;;GAIG;AACH,MAAM,UAAU,WAAW,CAGzB,gBAAgC,EAAE,QAAiE;;IACjG,MAAM,OAAO,GAAG,MAAA,MAAC,gBAAwB,aAAxB,gBAAgB,uBAAhB,gBAAgB,CAAU,WAAW,gEAAI,mCAAI,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3F,OAAO,CAAC,IAAI,CAAC,CAAC,IAAkC,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACzE,CAAC;AAED,MAAM,UAAU,4BAA4B;IACxC,CAAC,CAAC,QAAQ,CAAC,kFAAkF,CAAC,CAAC;AACnG,CAAC","file":"util.mjs","sourcesContent":["import { AgPromise, ICellEditor, IFilter, IStatusPanel, IToolPanel, _ } from \"@ag-grid-community/core\";\n\n/**\n * Function to retrieve the React component from an instance returned by the grid.\n * @param wrapperComponent Instance component from the grid\n * @param callback Callback which is provided the underlying React custom component\n */\nexport function getInstance<\n    TGridComponent extends IFilter | IToolPanel | ICellEditor | IStatusPanel = IFilter | IToolPanel | ICellEditor | IStatusPanel,\n    TCustomComponent extends TGridComponent = TGridComponent\n>(wrapperComponent: TGridComponent, callback: (customComponent: TCustomComponent | undefined) => void): void {\n    const promise = (wrapperComponent as any)?.getInstance?.() ?? AgPromise.resolve(undefined);\n    promise.then((comp: TCustomComponent | undefined) => callback(comp));\n}\n\nexport function warnReactiveCustomComponents(): void {\n    _.warnOnce('Using custom components without `reactiveCustomComponents = true` is deprecated.');\n}\n"]}