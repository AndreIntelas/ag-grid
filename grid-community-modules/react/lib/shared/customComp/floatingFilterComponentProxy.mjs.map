{"version":3,"sources":["shared/customComp/floatingFilterComponentProxy.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAA0C,MAAM,yBAAyB,CAAC;AAC5F,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAG9D,MAAM,UAAU,0BAA0B,CAAC,MAA6B,EAAE,KAAU;IAChF,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;QACnC,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACxD,MAAM,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAM,OAAO,4BAA4B;IAIrC,YAAoB,oBAA2C,EAAmB,YAAwB;QAAtF,yBAAoB,GAApB,oBAAoB,CAAuB;QAAmB,iBAAY,GAAZ,YAAY,CAAY;QAHlG,UAAK,GAAQ,IAAI,CAAC;QACT,kBAAa,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAEoC,CAAC;IAEvG,QAAQ;QACX,uCACO,IAAI,CAAC,oBAAoB,KAC5B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,aAAa,EAAE,IAAI,CAAC,aAAa,IACnC;IACN,CAAC;IAEM,oBAAoB,CAAC,WAAgB;QACxC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO,CAAC,MAA6B;QACxC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;QACnC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,UAAU,CAAC,OAAsC;QACpD,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAEO,kBAAkB;QACtB,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAChC,CAAC;IAEO,WAAW,CAAC,KAAU;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,0BAA0B,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACjE,CAAC;CACJ","file":"floatingFilterComponentProxy.mjs","sourcesContent":["import { AgPromise, IFloatingFilter, IFloatingFilterParams } from \"@ag-grid-community/core\";\nimport { addOptionalMethods } from \"./customComponentWrapper\";\nimport { CustomFloatingFilterProps, CustomFloatingFilterCallbacks } from \"./interfaces\";\n\nexport function updateFloatingFilterParent(params: IFloatingFilterParams, model: any): void {\n    params.parentFilterInstance(instance => {\n        (instance.setModel(model) || AgPromise.resolve()).then(() => {\n            params.filterParams.filterChangedCallback();\n        });\n    });\n}\n\nexport class FloatingFilterComponentProxy implements IFloatingFilter {\n    private model: any = null;\n    private readonly onModelChange = (model: any) => this.updateModel(model);\n\n    constructor(private floatingFilterParams: IFloatingFilterParams, private readonly refreshProps: () => void) {}\n\n    public getProps(): CustomFloatingFilterProps {\n        return {\n            ...this.floatingFilterParams,\n            model: this.model,\n            onModelChange: this.onModelChange\n        };\n    }\n\n    public onParentModelChanged(parentModel: any): void {\n        this.model = parentModel;\n        this.refreshProps();\n    }\n\n    public refresh(params: IFloatingFilterParams): void {\n        this.floatingFilterParams = params;\n        this.refreshProps();\n    }\n\n    public setMethods(methods: CustomFloatingFilterCallbacks): void {\n        addOptionalMethods(this.getOptionalMethods(), methods, this);\n    }\n\n    private getOptionalMethods(): string[] {\n        return ['afterGuiAttached'];\n    }\n\n    private updateModel(model: any): void {\n        this.model = model;\n        this.refreshProps();\n        updateFloatingFilterParent(this.floatingFilterParams, model);\n    }\n}\n"]}