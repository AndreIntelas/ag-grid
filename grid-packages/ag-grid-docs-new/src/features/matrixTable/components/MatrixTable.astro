---
import { MatrixTable } from '../components/MatrixTable';
import { getEntry } from 'astro:content';
import { getIsDev } from '@utils/env';
import { DOCS_FRAMEWORK_PATH_INDEX } from '@features/docs/constants';

interface Props {
    /**
     * Data file name within `src/content/matrix-table`
     *
     * Excluding the extension
     */
    dataFileName: string;
}

const { dataFileName, ...props } = Astro.props as Props;

let data;
const contentFolder = 'matrix-table';
const entry = await getEntry(contentFolder, dataFileName);

if (entry) {
    data = entry.data;
} else {
    const errorMsg = dataFileName.endsWith('.json')
        ? '`dataFileName` does not require `.json` extension. Use the name of the file'
        : `Data file "/src/content/${contentFolder}/${dataFileName}" not found`;
    if (getIsDev()) {
        console.error(errorMsg);
    } else {
        throw new Error(errorMsg);
    }
}

const pathSegments = Astro.url.pathname.split('/');
const framework = pathSegments[DOCS_FRAMEWORK_PATH_INDEX];
---

{data && <MatrixTable framework={framework} data={data} {...props} />}
