:ag-current-theme {
  .ag-rtl {
    text-align: right;
  }

  .ag-root-wrapper {
    border-radius: var(--ag-wrapper-border-radius);
  }

  .ag-row-group-leaf-indent {
    margin-left: var(--ag-row-group-indent-size);
  }

  .ag-value-change-delta {
    padding: 0 2px;
  }

  .ag-value-change-delta-up {
    color: var(--ag-value-change-delta-up-color);
  }

  .ag-value-change-delta-down {
    color: var(--ag-value-change-delta-down-color);
  }

  .ag-value-change-value {
    background-color: transparent;
    border-radius: 1px;
    padding-left: 1px;
    padding-right: 1px;
    transition: background-color 1s;
  }

  .ag-value-change-value-highlight {
    background-color: var(--ag-value-change-value-highlight-background-color);
    transition: background-color 0.1s;
  }

  .ag-cell-data-changed {
    background-color: var(--ag-value-change-value-highlight-background-color) !important;
  }

  .ag-cell-data-changed-animation {
    background-color: transparent;
  }

  .ag-cell-highlight {
    background-color: var(--ag-range-selection-highlight-color) !important;
  }

  .ag-row {
    background-color: var(--ag-background-color);
    color: var(--ag-data-color);
  }

  .ag-row-highlight-above::after,
  .ag-row-highlight-below::after {
    content: '';
    position: absolute;
    width: calc(100% - 1px);
    height: 1px;
    background-color: var(--ag-range-selection-border-color);
    left: 1px;
  }

  .ag-row-highlight-above::after {
    top: -1px;
  }

  .ag-row-highlight-above.ag-row-first::after {
    top: 0;
  }

  .ag-row-highlight-below::after {
    bottom: 0px;
  }

  .ag-row-odd {
    background-color: var(--ag-odd-row-background-color);
  }

  /* row selection and hover colors are added on a ::before pseudo element so
  that they overlay on top of the alternating row backgrounds rather than
  replacing them */
  .ag-row-selected::before {
    content: '';
    background-color: var(--ag-selected-row-background-color);
    display: block;
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .ag-row-hover:not(.ag-full-width-row)::before,
  .ag-row-hover.ag-full-width-row.ag-row-group::before {
    content: '';
    background-color: var(--ag-row-hover-color);
    display: block;
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .ag-row-hover.ag-row-selected::before {
    background-color: var(--ag-row-hover-color);
    /* apply hover with a background-image so that it overlays on top of the
    existing background-color */
    background-image: linear-gradient(
      var(--ag-selected-row-background-color),
      var(--ag-selected-row-background-color)
    );
  }

  /* Default the content position to relative so that it doesn't appear under the background */
  .ag-row-hover.ag-full-width-row.ag-row-group > * {
    position: relative;
  }

  .ag-column-hover {
    background-color: var(--ag-column-hover-color);
  }

  .ag-right-aligned-cell {
    text-align: right;
  }

  /* right-align numeric values in cells with wrappers */
  .ag-right-aligned-cell .ag-cell-value,
  .ag-right-aligned-cell .ag-group-value {
    /*rtl:ignore*/
    margin-left: auto;
  }

  .ag-cell,
  .ag-full-width-row .ag-cell-wrapper.ag-row-group {
    padding-left: calc(var(--ag-cell-horizontal-padding) - 1px);
    padding-right: calc(var(--ag-cell-horizontal-padding) - 1px);
    -webkit-font-smoothing: subpixel-antialiased;
  }

  /* in full width rows, a cell renderer is rendered directly into a row with no
  cell in between, in which case we need to apply the padding to the cell
  renderer's wrapper. */
  .ag-row > .ag-cell-wrapper {
    padding-left: calc(var(--ag-cell-horizontal-padding) - 1px);
    padding-right: calc(var(--ag-cell-horizontal-padding) - 1px);
  }

  .ag-row-dragging {
    cursor: move;
    opacity: 0.5;
  }

  .ag-details-row {
    padding: calc(var(--ag-grid-size) * 3.5);
    background-color: var(--ag-background-color);
  }

  .ag-layout-auto-height,
  .ag-layout-print {
    .ag-center-cols-viewport,
    .ag-center-cols-container {
      min-height: 50px;
    }
  }

  .ag-overlay-loading-wrapper {
    background-color: var(--ag-modal-overlay-background-color);
  }

  /* in auto-height mode with no rows, add padding to prevent grid being too small */
  .ag-overlay-no-rows-wrapper.ag-layout-auto-height {
    padding-top: 30px;
  }

  .ag-loading {
    padding-left: var(--ag-cell-horizontal-padding);
    display: flex;
    height: 100%;
    align-items: center;
  }

  .ag-loading-icon {
    padding-right: var(--ag-cell-widget-spacing);
  }

  .ag-icon-loading {
    animation-name: spin;
    animation-duration: 1000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}
