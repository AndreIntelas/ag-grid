import { definePartMeta } from './metadata-types';

export const coreMeta = definePartMeta({
  partId: 'core',
  params: [
    {
      property: 'rangeSelectionBorderStyle',
      type: 'borderStyle',
      docs: 'Style of the border around range selections.',
      defaultValue: 'solid',
    },
    {
      property: 'rangeSelectionBorderColor',
      type: 'color',
      docs: 'The color used for borders around range selections. The selection background defaults to a semi-transparent version of this colour.',
      defaultValue: { helper: 'ref', arg: 'accentColor' },
    },
    {
      property: 'rangeSelectionBackgroundColor',
      type: 'color',
      docs: 'Background colour of selected cell ranges. Choosing a semi-transparent colour ensure that multiple overlapping ranges look correct.',
      defaultValue: { helper: 'transparentAccent', arg: 0.2 },
    },
    {
      property: 'rangeSelectionChartBackgroundColor',
      type: 'color',
      docs: 'Background colour for cells that provide data to the current range chart',
      defaultValue: '#0058FF1A',
    },
    {
      property: 'rangeSelectionChartCategoryBackgroundColor',
      type: 'color',
      docs: 'Background colour for cells that provide categories to the current range chart',
      defaultValue: '#00FF841A',
    },
    {
      property: 'rangeSelectionHighlightColor',
      type: 'color',
      docs: 'Background colour to briefly apply to a cell range when the user copies from or pastes into it.',
      defaultValue: { helper: 'transparentAccent', arg: 0.5 },
    },
    {
      property: 'rowHoverColor',
      type: 'color',
      docs: 'Background color when hovering over rows in the grid and in dropdown menus. Set to `transparent` to disable the hover effect. Note: if you want a rollover on one but not the other, use CSS selectors instead of this property.',
      defaultValue: { helper: 'transparentAccent', arg: 0.12 },
    },
    {
      property: 'columnHoverColor',
      type: 'color',
      docs: 'Background color when hovering over columns in the grid',
      defaultValue: { helper: 'transparentAccent', arg: 0.05 },
    },
    {
      property: 'selectedRowBackgroundColor',
      type: 'color',
      docs: 'Background color of selected rows in the grid and in dropdown menus.',
      defaultValue: { helper: 'transparentAccent', arg: 0.08 },
    },
    {
      property: 'modalOverlayBackgroundColor',
      type: 'color',
      docs: 'Background color of the overlay shown over the grid e.g. a data loading indicator.',
      defaultValue: { helper: 'transparentBackground', arg: 0.08 },
    },
    {
      property: 'oddRowBackgroundColor',
      type: 'color',
      docs: 'Background colour applied to every other row',
      defaultValue: { helper: 'ref', arg: 'backgroundColor' },
    },
    {
      property: 'borderRadius',
      type: 'length',
      docs: 'Border radius applied to many elements such as menus, dialogs and form widgets.',
      defaultValue: '4px',
      min: 0,
      max: 20,
      step: 1,
    },
    {
      property: 'wrapperBorderRadius',
      type: 'length',
      defaultValue: '8px',
      min: 0,
      max: 20,
      step: 1,
      docs: 'Border radius applied to the outermost container around the grid.',
    },
    {
      property: 'cellWidgetSpacing',
      type: 'length',
      docs: 'Horizontal spacing between widgets inside cells (e.g. row group expand buttons and row selection checkboxes).',
      defaultValue: { helper: 'calc', arg: 'gridSize * 1.5' },
      min: 0,
      max: 50,
      step: 1,
    },
    {
      property: 'rowGroupIndentSize',
      type: 'length',
      docs: 'The indentation applied to each level of row grouping - deep rows are indented by a multiple of this value.',
      defaultValue: { helper: 'calc', arg: 'cellWidgetSpacing + iconSize' },
      min: 0,
      max: 50,
      step: 1,
    },
    {
      property: 'valueChangeDeltaUpColor',
      type: 'color',
      docs: 'Colour to temporarily apply to cell data when its value increases in an agAnimateShowChangeCellRenderer cell',
      defaultValue: '#43a047',
    },
    {
      property: 'valueChangeDeltaDownColor',
      type: 'color',
      docs: 'Colour to temporarily apply to cell data when its value decreases in an agAnimateShowChangeCellRenderer cell',
      defaultValue: '#e53935',
    },
    {
      property: 'valueChangeValueHighlightBackgroundColor',
      type: 'color',
      docs: 'Colour to apply when a cell value changes and enableCellChangeFlash is enabled',
      defaultValue: '#16a08580',
    },
    {
      property: 'gridSize',
      type: 'length',
      docs: 'Control how tightly data and UI elements are packed together. All padding and spacing in the grid is defined as a multiple of the grid size, so increasing it will make most components larger by increasing their internal white space while leaving the size of text and icons unchanged.',
      defaultValue: '8px',
      min: 0,
      max: 50,
      step: 0.5,
    },
    {
      property: 'cellHorizontalPadding',
      type: 'length',
      docs: 'Colour to apply when a cell value changes and enableCellChangeFlash is enabled',
      defaultValue: { helper: 'calc', arg: 'gridSize * 2' },
      min: 0,
      max: 50,
      step: 1,
    },
    {
      property: 'fontSize',
      type: 'length',
      docs: 'Height of grid rows',
      defaultValue: '14px',
      min: 8,
      max: 50,
      step: 1,
    },
    {
      property: 'rowHeight',
      type: 'length',
      docs: 'Height of grid rows',
      defaultValue: { helper: 'calc', arg: 'fontSize + gridSize * 3.5' },
      min: 8,
      max: 50,
      step: 1,
    },
  ],
  cssFiles: ['reset.css', 'grid-borders.css', 'grid-layout.css'],
});
