import type { AstroIntegration } from 'astro';
import { writeFileSync } from 'node:fs';
import { join } from 'node:path';
import { fileURLToPath } from 'node:url';

import { htaccessChecker } from '../src/utils/htaccess/htaccessChecker';
import { modDeflateRules, modExpiresRules, modRewriteRules } from '../src/utils/htaccess/htaccessRules';

type Options = {
    include: boolean;
};

const HTACCESS_CONTENT = `### AUTOGENERATED DO NOT EDIT
ErrorDocument 404 /404.html

# add MIME types for serving example files
AddType text/javascript ts jsx

${modExpiresRules}
${modDeflateRules}
${modRewriteRules}

# CORS settings
Header add Access-Control-Allow-Origin "*"
Header add Access-Control-Allow-Methods: "GET,POST,OPTIONS,DELETE,PUT"

Options -Indexes
`;

export default function createPlugin(options: Options): AstroIntegration {
    return {
        name: 'ag-htaccess-gen',
        hooks: {
            'astro:build:done': async ({ dir, logger }) => {
                if (!options.include) {
                    logger.info('.htaccess generation disabled, skipping');
                    return;
                }

                const destDir = fileURLToPath(dir);
                const filename = join(destDir, '.htaccess');
                writeFileSync(filename, HTACCESS_CONTENT);

                logger.info(`.htaccess generated to: ${filename}`);

                const checkLogger = logger.fork('ag-htaccess-gen/htaccessChecker');
                htaccessChecker({ buildDir: destDir, logger: checkLogger });
            },
        },
    };
}
